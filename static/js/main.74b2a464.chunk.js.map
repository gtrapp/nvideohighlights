{"version":3,"sources":["SearchBar.js","Table.js","VideoPlayer.js","VideoThumbnail.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","handleInputChange","e","setState","value","target","searchTermChange","state","bind","style","margin","placeholder","this","onChange","width","height","Component","DataTable","rowClick","rowInfo","selectedRows","Set","onClick","ctrlKey","_index","index","push","rowClicked","background","some","data","rows","columns","getTrProps","VideoPlayer","video","selectedVideo","selectedRow","videos","embed","paddingTop","dangerouslySetInnerHTML","__html","VideoThumbnail","thumbClicked","changeSelectedVideo","thumbs","i","length","className","map","thumb","key","App","getData","fetch","then","res","json","result","_","forEach","competitionName","competition","name","side1Name","side1","side2Name","side2","numVideos","getColumns","Header","accessor","onClickRow","original","searchTerm","filteredRows","filter","item","toLowerCase","includes","title","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74b2a464.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange = e => {\n    this.setState({ value: e.target.value });\n    this.props.searchTermChange(e.target.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <form style={{margin: '20px'}} >\n          <input\n            placeholder=\"Search\"\n            value={this.state.value}\n            onChange={this.handleInputChange}\n            style={{ width: \"500px\", height: \"20px\" }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table-v6\";\nimport \"react-table-v6/react-table.css\";\n\nexport default class DataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRows: []\n    };\n  }\n\n  rowClick = (state, rowInfo) => {\n    if (rowInfo) {\n      let selectedRows = new Set();\n      return {\n        onClick: e => {\n          if (e.ctrlKey) {\n            selectedRows = this.state.selectedRows;\n            rowInfo._index = rowInfo.index;\n            selectedRows.push(rowInfo);\n            this.setState({\n              selectedRows\n            });\n          } else {\n            selectedRows = [];\n            rowInfo._index = rowInfo.index;\n            selectedRows.push(rowInfo);\n          }\n          this.setState(\n            {\n              selectedRows\n            },\n            () => {\n              this.props.rowClicked(this.state.selectedRows);\n            }\n          );\n        },\n        style: {\n          background:\n            this.state.selectedRows.some(e => e._index === rowInfo.index) &&\n            \"#9bdfff\"\n        }\n      };\n    } else {\n      return \"\";\n    }\n  };\n\n  render() {\n    return (\n      <ReactTable\n        data={this.props.rows}\n        columns={this.props.columns}\n        getTrProps={this.rowClick}\n      />\n    );\n  }\n}\n","//src https://codesandbox.io/s/react-table-row-table-alternate-single-row-working-hor8j\n\nimport React, { Component } from \"react\";\n\nclass VideoPlayer extends Component {\n  render() {\n    let videoFrame = {\n      width: \"40%\",\n      height: \"40%\",\n      margin: \"auto\",\n      paddingTop: \"20px\"\n    };\n\n    let video;\n    \n    if (this.props.selectedVideo) {\n      video = this.props.selectedVideo;\n    } else if (this.props.selectedRow && this.props.selectedRow.videos) {\n      video = this.props.selectedRow.videos[0].embed;\n    } else {\n      video = <h1>placeholder</h1>\n    }\n\n    return (\n      <div style={videoFrame}>\n        <div dangerouslySetInnerHTML={{ __html: video }} />\n      </div>\n    );\n  }\n}\n\nexport default VideoPlayer;\n","import React, { Component } from \"react\";\n\nclass VideoThumbnail extends Component {\n\n  thumbClicked = e => {\n    this.props.changeSelectedVideo(e);\n  };\n\n  render() {\n    let thumbs = [];\n\n    if (this.props.selectedRow) {\n      thumbs = [];\n      for (let i = 0; i < this.props.selectedRow.videos.length; i++) {\n        thumbs.push(\n          this.props.selectedRow.videos[i].embed\n        );\n      }\n    } else {\n      thumbs = ['one', 'two', 'three'];\n    }\n\n    return (\n      <div className=\"highlights-list\">\n        {thumbs.map((thumb) => (\n          <div key={thumb} className=\"video-thumb\" onClick={() => this.thumbClicked(thumb)}>\n            <div dangerouslySetInnerHTML={{ __html: thumb }} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default VideoThumbnail;\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport \"./App.css\";\n\nimport SearchBar from \"./SearchBar.js\";\nimport DataTable from \"./Table.js\";\nimport VideoPlayer from \"./VideoPlayer.js\";\nimport VideoThumbnail from \"./VideoThumbnail.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: [],\n      columns: [],\n      selectedRow: null,\n      selectedVideo: null,\n      searchTerm: \"\"\n    };\n    this.searchTermChange = this.searchTermChange.bind(this);\n    this.changeSelectedVideo = this.changeSelectedVideo.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.getColumns();\n  }\n  getData = () => {\n    fetch(\"https://www.scorebat.com/video-api/v1\")\n      .then(res => res.json())\n      .then(result => {\n        _.forEach(result, (value, key) => {\n          value.competitionName = value.competition.name;\n          value.side1Name = value.side1.name;\n          value.side2Name = value.side2.name;\n          value.numVideos = value.videos.length;\n        });\n\n        this.setState({\n          rows: result,\n          selectedRow: result[0],\n        });\n      });\n  };\n  getColumns = () => {\n    const columns = [\n      {\n        Header: \"Title\",\n        accessor: \"title\"\n      },\n      {\n        Header: \"Team1\",\n        accessor: \"side1Name\"\n      },\n      {\n        Header: \"Team2\",\n        accessor: \"side2Name\"\n      },\n      {\n        Header: \"League\",\n        accessor: \"competitionName\"\n      },\n      {\n        Header: \"# Videos\",\n        accessor: \"numVideos\"\n      }\n    ];\n    this.setState({ columns });\n  };\n\n  onClickRow = rowInfo => {\n    this.setState({\n      selectedRow: rowInfo[0].original,\n      selectedVideo: null,\n    });\n  };\n\n  searchTermChange = value => {\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  changeSelectedVideo = video => {\n    this.setState({\n      selectedVideo: video\n    });\n  };\n\n  render() {\n    const { rows, columns, selectedRow, selectedVideo, searchTerm } = this.state;\n    let filteredRows;\n\n    if (searchTerm) {\n      filteredRows = _.filter(rows, item => {\n        return (\n          item.competitionName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          item.side1Name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          item.side2Name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          item.title.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n      });\n    } else {\n      filteredRows = rows;\n    }\n\n    return (\n      <div className=\"App\">\n        <VideoPlayer selectedVideo={selectedVideo} selectedRow={selectedRow} />\n        <VideoThumbnail changeSelectedVideo={this.changeSelectedVideo} selectedRow={selectedRow} />\n        <SearchBar searchTermChange={this.searchTermChange} />\n        <DataTable\n          rows={filteredRows}\n          columns={columns}\n          rowClicked={this.onClickRow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}